"""Replace order_id with raw_signal_id

Revision ID: b28b0c0848ea
Revises:
Create Date: 2025-07-27 02:07:56.932966

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "b28b0c0848ea"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "raw_signals",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("payload", sa.JSON(), nullable=False),
        sa.Column("fund_manager_id", sa.String(length=64), nullable=False),
        sa.Column(
            "received_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_raw_signals_fund_manager_id"),
        "raw_signals",
        ["fund_manager_id"],
        unique=False,
    )
    op.create_table(
        "strategy_open_trades",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("raw_signal_id", sa.BigInteger(), nullable=False),
        sa.Column("symbol", sa.String(length=32), nullable=False),
        sa.Column(
            "side", sa.Enum("long", "short", name="open_side_enum"), nullable=False
        ),
        sa.Column("entry_price", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("position_size", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("leverage", sa.Integer(), nullable=False),
        sa.Column("order_type", sa.String(length=16), nullable=False),
        sa.Column("timestamp", sa.DateTime(timezone=True), nullable=False),
        sa.Column("unrealized_pnl", sa.Numeric(precision=18, scale=8), nullable=True),
        sa.ForeignKeyConstraint(
            ["raw_signal_id"], ["raw_signals.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_strategy_open_trades_raw_signal_id"),
        "strategy_open_trades",
        ["raw_signal_id"],
        unique=False,
    )
    op.create_table(
        "strategy_trades",
        sa.Column("id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("raw_signal_id", sa.BigInteger(), nullable=False),
        sa.Column("symbol", sa.String(length=32), nullable=False),
        sa.Column(
            "side", sa.Enum("long", "short", name="trade_side_enum"), nullable=False
        ),
        sa.Column("entry_price", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("exit_price", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("position_size", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("pnl", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("order_type", sa.String(length=16), nullable=False),
        sa.Column("timestamp", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["raw_signal_id"], ["raw_signals.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_strategy_trades_raw_signal_id"),
        "strategy_trades",
        ["raw_signal_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_strategy_trades_raw_signal_id"), table_name="strategy_trades"
    )
    op.drop_table("strategy_trades")
    op.drop_index(
        op.f("ix_strategy_open_trades_raw_signal_id"), table_name="strategy_open_trades"
    )
    op.drop_table("strategy_open_trades")
    op.drop_index(op.f("ix_raw_signals_fund_manager_id"), table_name="raw_signals")
    op.drop_table("raw_signals")
    # ### end Alembic commands ###
